version: "3.0"

services:
  traffic_mapper:
    container_name: traffic_mapper_shiny
    # To build the image locally, comment out "image" below, and uncomment
    # "build" and the lines indented under it.
    # image: artificiallyintelligent/shiny_lite
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SRC_TAG: "3.6.3"
        SRC_IMAGE: "artificiallyintelligent/shiny_heavy"
        DISCOVERY: "FALSE"
        PACKAGES: "config,shiny,shinycssloaders,shinyjs,shinyWidgets,stringr,scales,waiter,dplyr,readxl,data.table,geojsonio,sf,RMySQL,DBI,pool,mongolite,here,ggplot2,ggiraph,ggiraphExtra,RColorBrewer,viridis,hrbrthemes,lattice,leaflet"
        DEPENDENCY: "ALL"
    restart: always
    # Setting this to something other than 'root' will cause shiny apps not to
    # run on the localhost:80 "Welcome to Shiny" diagnostics page mentioned
    # below.
    user: 'root'
    # Uncomment the lines below to disable application logs STDOUT output
    environment:
      - R_CONFIG_FILE=/usr/local/lib/shiny-server/config_mount/config.yaml
      - DISCOVER_PACKAGES=FALSE
      - DEPENDENCY_INSTALL=FALSE
      - SHINY_APP_IDLE_TIMEOUT=5
      - SHINY_APP_INIT_TIMEOUT=60
      - SHINY_GOOGLE_ANALYTICS_ID=
      - PORT=8080
      - APPLICATION_LOGS_TO_STDOUT=false
    ports:
      - '8080:8080'
    volumes:
      - shiny_logs:/var/log/shiny-server
      # Comment the lines below out for initial testing. With it commented out,
      # going to localhost:80 in one's web browser will show a "Welcome to
      # Shiny Server!" diagnostics page.
      # - './mountpoints/apps:/srv/shiny-server'
      # - ./mountpoints/apps:/etc/cont-init.d
      - 'C:/Users/Stuart/GitHub/TrafficMapper/Rscripts/conf:/usr/local/lib/shiny-server/config_mount'
volumes:
  shiny_logs:
